cmake_minimum_required(VERSION 3.8)
project(ur10_interface)

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

# find dependencies
find_package(ament_cmake REQUIRED)
find_package(rclpy REQUIRED)
find_package(rclcpp REQUIRED)
find_package(std_msgs REQUIRED)
find_package(geometry_msgs REQUIRED)
find_package(trajectory_msgs REQUIRED)
find_package(visualization_msgs REQUIRED)
find_package(interactive_markers REQUIRED)
find_package(moveit_ros_planning_interface REQUIRED)
find_package(tf2 REQUIRED)
find_package(tf2_ros REQUIRED)
find_package(tf2_geometry_msgs REQUIRED)
# find_package(tf_transformations REQUIRED)
find_package(moveit_py REQUIRED)
find_package(ament_cmake_python REQUIRED) # for python scripts
find_package(rosidl_default_generators REQUIRED) # for custom message generation

# include cpp "include" directory
include_directories(include)

# create cpp executable
add_executable(talker src/talker_cpp.cpp)
ament_target_dependencies(talker rclcpp std_msgs)

# install cpp executable
install(TARGETS
  talker
  DESTINATION lib/${PROJECT_NAME}
)

# install python modules
# ament_python_install_package(${PROJECT_NAME}) # rosidl_generate_interfaces에서 중복 발생

# install python executables
install(PROGRAMS
  scripts/listener_py.py
  scripts/input_command.py
  scripts/mode_manager.py
  scripts/delta_target_input.py
  scripts/target_pose.py
  DESTINATION lib/${PROJECT_NAME}
)

# Install launch files.
install(DIRECTORY
  launch
  DESTINATION share/${PROJECT_NAME}/
)

# Install config files.
install(DIRECTORY config/
  DESTINATION share/${PROJECT_NAME}/config
)

# Add custom service message
rosidl_generate_interfaces(${PROJECT_NAME}
  "srv/SetTargetPose.srv"
  "srv/SolveIk.srv"
  DEPENDENCIES std_msgs geometry_msgs
)

ament_export_dependencies(rosidl_default_runtime)


if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  # the following line skips the linter which checks for copyrights
  # comment the line when a copyright and license is added to all source files
  #set(ament_cmake_copyright_FOUND TRUE)
  # the following line skips cpplint (only works in a git repo)
  # comment the line when this package is in a git repo and when
  # a copyright and license is added to all source files
  #set(ament_cmake_cpplint_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()
endif()

ament_package()
